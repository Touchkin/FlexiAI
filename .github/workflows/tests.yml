name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: [self-hosted, Linux, X64, python36]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run linters
        run: |
          # Run black check
          black --check .
          # Run isort check
          isort --check-only .
          # Run flake8
          flake8 flexiai/ tests/

      - name: Run security checks
        run: |
          # Run bandit
          bandit -c pyproject.toml -r flexiai/
          # Run detect-secrets (only new secrets, not in baseline)
          detect-secrets scan --baseline .secrets.baseline

      - name: Run tests
        run: |
          pytest tests/ -v --cov=flexiai --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.12'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  build-check:
    name: Build package check
    runs-on: [self-hosted, Linux, X64, python36]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check distribution
        run: twine check dist/*

      - name: Test package installation
        run: |
          pip install dist/*.whl
          python -c "from flexiai import FlexiAI; print('Package imported successfully')"
