# Pre-commit hooks for FlexiAI
# See https://pre-commit.com for more information

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: debug-statements
      - id: mixed-line-ending

  # Python code formatting with black
  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=100']

  # Python import sorting with isort
  - repo: https://github.com/PyCQA/isort
    rev: 7.0.0
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '100']

  # Python linting with flake8
  - repo: https://github.com/PyCQA/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503']
        additional_dependencies: [flake8-docstrings]

  # Type checking with mypy
  # Disabled for now - Pydantic's runtime validation conflicts with mypy strict checking
  # Run manually: mypy flexiai/
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.8.0
  #   hooks:
  #     - id: mypy
  #       additional_dependencies: [pydantic>=2.0.0]
  #       args: ['--ignore-missing-imports', '--no-strict-optional']

  # Security checks with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']

  # Secret detection with detect-secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: '(package.lock.json|SECURITY.md|\.env\.example|.*\.md)'

  # Additional security checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: detect-private-key
        name: Detect Private Keys
        exclude: 'SECURITY.md'
      - id: check-case-conflict
        name: Check for case conflicts
      - id: forbid-new-submodules
        name: Forbid new submodules

  # Custom hook to detect API keys in code
  - repo: local
    hooks:
      - id: detect-api-keys
        name: Detect API Keys (OpenAI, Anthropic, Google)
        entry: .githooks/detect-api-keys.sh
        language: script
        pass_filenames: false
        always_run: true

      - id: block-service-account-files
        name: Block Google Service Account JSON Files
        entry: .githooks/block-service-accounts.sh
        language: script
        pass_filenames: false
        always_run: true

      - id: check-env-files
        name: Prevent .env files from being committed
        entry: .githooks/check-env-files.sh
        language: script
        pass_filenames: false
        always_run: true
